{
  "name": "postgres-balance-sink",
  "config": {
    "connector.class": "io.confluent.connect.jdbc.JdbcSinkConnector",
    "tasks.max": 1,
    "topics": "fungible_balance,non_fungible_balance",
    "insert.mode": "upsert",
    "batch.size": 1000,
    "connection.url": "{{ .Env.POSTGRES_JDBC_URL }}",
    "connection.user": "{{ .Env.POSTGRES_USER }}",
    "connection.password": "{{ .Env.POSTGRES_PASSWORD }}",
    "transforms": "snakeCaseKey,snakeCaseValue,dropFields,toJsonKey,toJsonValue,flattenValue",
    "transforms.flattenValue.type": "com.ethvm.kafka.connect.transforms.Flatten$Value",
    "transforms.flattenValue.delimiter": "_",
    "transforms.snakeCaseKey.type": "com.ethvm.kafka.connect.transforms.SnakeCase$Key",
    "transforms.snakeCaseValue.type": "com.ethvm.kafka.connect.transforms.SnakeCase$Value",
    "transforms.dropFields.type": "org.apache.kafka.connect.transforms.ReplaceField$Value",
    "transforms.dropFields.blacklist": "uncles",
    "transforms.toJsonKey.type": "com.ethvm.kafka.connect.transforms.JsonField$Key",
    "transforms.toJsonKey.whitelist": "logs,action,result,trace_address",
    "transforms.toJsonValue.type": "com.ethvm.kafka.connect.transforms.JsonField$Value",
    "transforms.toJsonValue.whitelist": "logs,action,result,trace_address,uncle_hashes,transaction_hashes,init,code,logo,support,social",
    "pk.mode": "record_key"
  }
}
