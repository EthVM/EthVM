const MetaCoin = artifacts.require("MetaCoin")
import { getAccountInfo } from "../libs"

getAccountInfo("0x00a329c0648769a73afac7f9381e08fb43dbea72").then(data =>
  console.log(data)
)

contract("MetaCoin", accounts => {
  it("should put 10000 MetaCoin in the first account", async () => {
    const metaCoinInstance = await MetaCoin.deployed()
    const balance = await metaCoinInstance.getBalance.call(accounts[0])

    assert.equal(balance.valueOf(), 10000, "10000 wasn't in the first account")
  })
  it("should call a function that depends on a linked library", async () => {
    const metaCoinInstance = await MetaCoin.deployed()
    const metaCoinBalance = (await metaCoinInstance.getBalance.call(
      accounts[0]
    )).toNumber()
    const metaCoinEthBalance = (await metaCoinInstance.getBalanceInEth.call(
      accounts[0]
    )).toNumber()

    assert.equal(
      metaCoinEthBalance,
      2 * metaCoinBalance,
      "Library function returned unexpected function, linkage may be broken"
    )
  })
  it("should send coin correctly", async () => {
    const metaCoinInstance = await MetaCoin.deployed()

    const accountOne = accounts[0]

    // Get initial balances of first and second account.
    const accountOneStartingBalance = (await metaCoinInstance.getBalance.call(
      accountOne
    )).toNumber()
  })
})
